@page
@model MyPersonalDiary.com.Pages.DiaryNotes.CreateDiaryNoteWizardModel
@{
    ViewData["Title"] = "CreateDiaryNoteWizard";
}

@section Styles
{
    <style>

        .step {
            width: calc(95% / 3);
            display: inline-block;
            vertical-align: top;
            text-align: center;
            padding: 20px;
            border: 1px solid lightgray;
            border-radius: 2em 3em 1em / 4.5em 0em;
        }

        .step-focus {
            background-color: #f5f5f5;
        }

        .step-no-focus {
            background-color: none;
        }

        /*
            border-radius: 2em 1em 4em / 0.5em 3em;
            is equivalent to:
            border-top-left-radius: 2em 0.5em;
            border-top-right-radius: 1em 3em;
            border-bottom-right-radius: 4em 0.5em;
            border-bottom-left-radius: 1em 3em; */

        .card-navigation {
            overflow: auto;
            margin: 5px 0 5px 0;
        }

        .card-container {
            max-width: 760px;
            margin: 25px auto 25px auto;
        }

        .cardx {
            margin: 5px;
            min-height: 250px;
        }

        .card-actions {
            float: right;
        }

        h1, h2, h3, h4, h5, h6 {
            color: dimgray;
            margin: 10px;
        }

        hr {
            color: lightgray;
        }
    </style>
}

<h3>Add today's Diary note</h3>
<hr />

<form>

    <div id="msCreateNew">
        <div class="card-navigation">
            <div class="step start step-focus" data-target="#card1">
                <a href="#">Title</a>
            </div>
            <div class="step" data-target="#card2">
                <a href="#">Summary</a>
            </div>
            <div class="step end" data-target="#card3">
                <a href="#">Details</a>
            </div>
        </div>

        <div class="card-container">
            <div class="cardx start card-focus" id="card1" style="display:block">
                <textarea class="form-control" placeholder="Title" rows="5"></textarea>
            </div>

            <div class="cardx" id="card2" style="display:none">
                <textarea class="form-control" placeholder="Summary" rows="10"></textarea>
            </div>

            <div class="cardx end" id="card3" style="display:none">
                <textarea class="form-control" placeholder="Details" rows="15"></textarea>
            </div>
            <div class="card-actions">
                <a class="btn btn-secondary previous disabled" href="#">Previous</a>
                <a class="btn btn-secondary next" href="#">Next</a>
                <a class="btn btn-primary completed" style="display:none" href="#">Finish</a>
            </div>
            <div style="clear:both"></div>
        </div>
    </div>

</form>

@section Scripts
{
    <script>

        function getMultiStepConfig() {
            return {
                rootElement: '#msCreateNew'
            };
        }

        var sourceType = { 'navigation': 0, 'next': 1, 'previous': 2 };

        $(document).ready(function () {

            $(".previous").on('click', function (e) {
                e.preventDefault();
                UpdateView(e.target);
            });

            $(".next").on('click', function (e) {
                e.preventDefault();
                UpdateView(e.target)
            });

            $("div[data-target]").on('click', function (e) {
                e.preventDefault();
                UpdateView(e.currentTarget);
            });

            $(".completed").on('click', function (e) {
                e.preventDefault();
                console.log('completed');

            });

            function canGoNext(currentStep, next, previous) {
                if (next && next.length > 0 && next.attr('id') != currentStep.attr('id')
                    && currentStep.hasClass('end') === false) return true;

                return false;
            }

            function canGoPrevious(currentStep, next, previous) {
                if (previous && previous.length > 0 && previous.attr('id') != currentStep.attr('id')
                    && currentStep.hasClass('start') === false) return true;

                return false;
            }

            function handleNavigationButtons(rootElement) {

                //
                // enable/disable buttons
                //
                var currentCard = rootElement.find('.card-focus');
                var nextCard = currentCard.next('.cardx');
                var previousCard = currentCard.prev('.cardx');
                var canGoNextt = canGoNext(currentCard, nextCard, previousCard);
                var canGoPreviouss = canGoPrevious(currentCard, nextCard, previousCard)

                if (!canGoNextt) {
                    $(".next").addClass('disabled');
                }
                else {
                    $(".next").removeClass('disabled');
                }

                if (!canGoPreviouss) {
                    $(".previous").addClass('disabled');
                }
                else {
                    $(".previous").removeClass('disabled');
                }

                //
                // choose navigation step
                //
                var currentStep = rootElement.find('.step-focus');
                var navigationStep = $(rootElement).find('[data-target="#' + currentCard.attr('id') + '"]')
                currentStep.removeClass('step-focus');
                navigationStep.addClass("step-focus");

                //
                // handle completed button visibility
                //
                var isLastCard = currentCard && currentCard.length > 0 && currentCard.hasClass('end') === true;
                if (isLastCard) {
                    $('.completed').show();
                    $('.next').hide();
                }
                else {
                    $('.completed').hide();
                    $('.next').show();
                }
            }

            function UpdateView(source) {

                var that = $(source)

                var srcType = sourceType.navigation;

                if (that.hasClass('previous'))
                    srcType = sourceType.previous;
                if (that.hasClass('next'))
                    srcType = sourceType.next;

                var pageConfig = getMultiStepConfig();
                var rootElement = $(pageConfig.rootElement);

                var currentCard = rootElement.find('.card-focus');
                var nextCard = currentCard.next('.cardx');
                var previousCard = currentCard.prev('.cardx');

                console.log('sourceType', srcType);

                if (srcType === sourceType.next && nextCard && nextCard.length > 0) {
                    currentCard.hide();
                    nextCard.show();
                    nextCard.addClass('card-focus');
                    currentCard.removeClass('card-focus');
                }

                if (srcType === sourceType.previous && previousCard && previousCard.length > 0) {
                    currentCard.hide();
                    previousCard.show();
                    previousCard.addClass('card-focus');
                    currentCard.removeClass('card-focus');
                }

                if (srcType === sourceType.navigation) {

                    var dataTarget = that.data('target');
                    var selectedCard = $(dataTarget);

                    if (selectedCard.attr('id') !== currentCard.attr('id')) {
                        selectedCard.show();
                        currentCard.hide();

                        selectedCard.addClass('card-focus');
                        currentCard.removeClass('card-focus');
                    }
                }

                handleNavigationButtons(rootElement);
            }
        });
    </script>
}

